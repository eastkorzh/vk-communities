{"version":3,"sources":["actions/LoginActions.js","actions/communitiesActions.js","components/LoginButton.js","components/ProfileCard.js","components/Communities.js","components/Post.js","components/Wall.js","components/Back.js","components/CommentCard.js","components/Comments.js","components/Sort.js","containers/App.js","api/index.js","saga/loginSaga.js","saga/communitiesSaga.js","rootSaga.js","index.js","reducers/index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_FAIL","loginRequest","type","loginSuccess","loginFail","userGetRequest","userGetSuccess","userGetFail","error","COMMUNITIES_GET_REQUEST","COMMUNITIES_GET_SUCCESS","COMMUNITIES_GET_FAIL","WALL_GET_REQUEST","WALL_GET_SUCCESS","WALL_GET_FAIL","GET_COMMENTS_REQUEST","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAIL","communitiesGetRequest","communitiesGetSuccess","r","response","communitiesGetFail","errors","wallGetRequest","pickedGroup","Object","objectSpread","wallGetSuccess","wallGetFail","getCommentsRequest","owner_id","post_id","getCommentsSuccess","getCommentsFail","LoginButton","_ref","onLogin","react_default","a","createElement","onClick","className","localStorage","isLoggedIn","ProfileCard","state","first_name","href","concat","id","src","photo","alt","Communities","_this$props","this","props","communities","map","item","key","style","opacity","isFetching","react_router_dom","to","screen_name","photo_100","name","activity","members_count","Fragment","renderCommunities","React","Component","Post","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gridRowEnd","wallPost","createRef","postRef","postHeight","current","getBoundingClientRect","height","k","Math","ceil","setState","resizeComponent","size","attachments","photos","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","length","filteredPhotos","i","result","sizes","j","url","ms","Date","toLocaleString","_this2","ref","comments","count","sessionStorage","item_id","takeDate","date","text","onLoad","takePhoto","likes","reposts","views","Wall","groups","takePickedGroup","match","params","_this$props2","isFatching","posts","src_components_Post","renderPosts","Back","react_router","path","render","photo_50","slice","CommentCard","takeProfile","profiles","includes","handleText","start","indexOf","stop","nameStart","hiresImg","deleted","profile","from_id","last_name","Comments","items","components_CommentCard","thread","renderComments","Sort","isSorted","originalSort","sortComments","filteredItems","filter","isDeleted","filteredComments","resultItems","sort","b","sortCommentsFunction","App","rest","objectWithoutProperties","src_components_ProfileCard","components_LoginButton","exact","src_components_Communities","src_components_Back","src_components_Sort","src_components_Wall","src_components_Comments","connect","dispatch","apiCall","method","Promise","resolve","reject","VK","Api","v","then","watchOnLogin","usersGet","watchUsersGet","loginSaga","login","regenerator_default","wrap","_context","prev","Auth","session","sent","user","put","Error","t0","_marked","_context2","takeLatest","_marked2","_context3","user_ids","fields","photo_200","_marked3","_context4","_marked4","_context5","all","_marked5","watchRenderCommunities","onWallGetRequest","watchOnWallGetRequest","onGetCommentsRequest","watchOnGetCommentsRequest","communitiesSaga","extended","error_msg","communitiesSaga_marked","communitiesSaga_marked2","action","domain","communitiesSaga_marked3","communitiesSaga_marked4","need_likes","thread_items_count","console","log","communitiesSaga_marked5","_context6","_marked6","_context7","_marked7","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","loggerMiddleware","createLogger","store","createStore","_state$errors","_state$errors2","_state$errors3","_state$errors4","arguments","apply","toConsumableArray","applyMiddleware","run","ReactDOM","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6ff3120.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGIN_BUTTON_MOUNTED = 'LOGIN_BUTTON_MOUNTED'\r\n\r\nexport const USER_GET_REQUEST = 'USER_GET_REQUEST'\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS'\r\nexport const USER_GET_FAIL = 'USER_GET_FAIL'\r\n\r\n\r\nexport const loginButtonMounted = {\r\n    type: LOGIN_BUTTON_MOUNTED,\r\n}\r\n\r\nexport const loginRequest = {\r\n    type: LOGIN_REQUEST,\r\n}\r\n\r\nexport const loginSuccess = {\r\n    type: LOGIN_SUCCESS,\r\n}\r\n\r\nexport const loginFail = {\r\n    type: LOGIN_FAIL,\r\n}\r\n\r\n\r\nexport const userGetRequest = {\r\n    type: USER_GET_REQUEST,\r\n}\r\n\r\nexport const userGetSuccess = {\r\n    type: USER_GET_SUCCESS,\r\n}\r\n\r\nexport const userGetFail = (error) => ({\r\n    type: USER_GET_FAIL,\r\n    error,\r\n})\r\n","export const COMMUNITIES_GET_REQUEST = 'COMMUNITIES_GET_REQUEST'\r\nexport const COMMUNITIES_GET_SUCCESS = 'COMMUNITIES_GET_SUCCESS'\r\nexport const COMMUNITIES_GET_FAIL = 'COMMUNITIES_GET_FAIL'\r\n\r\nexport const WALL_GET_REQUEST = 'WALL_GET_REQUEST'\r\nexport const WALL_GET_SUCCESS = 'WALL_GET_SUCCESS'\r\nexport const WALL_GET_FAIL = 'WALL_GET_FAIL'\r\n\r\nexport const GET_COMMENTS_REQUEST = 'GET_COMMENTS_REQUEST'\r\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS'\r\nexport const GET_COMMENTS_FAIL = 'GET_COMMENTS_FAIL'\r\n\r\n\r\nexport const communitiesGetRequest = {\r\n    type: COMMUNITIES_GET_REQUEST,\r\n}\r\n\r\nexport const communitiesGetSuccess = (r) => ({\r\n    type: COMMUNITIES_GET_SUCCESS,\r\n    response: r,\r\n})\r\n\r\nexport const communitiesGetFail = (errors) => ({\r\n    type: COMMUNITIES_GET_FAIL,\r\n    errors,\r\n})\r\n\r\n\r\nexport const wallGetRequest = (pickedGroup) => ({\r\n    type: WALL_GET_REQUEST,\r\n    pickedGroup: {...pickedGroup},\r\n})\r\n\r\nexport const wallGetSuccess = (r) => ({\r\n    type: WALL_GET_SUCCESS,\r\n    response: r,\r\n})\r\n\r\nexport const wallGetFail = (errors) => ({\r\n    type: WALL_GET_FAIL,\r\n    errors,\r\n})\r\n\r\nexport const getCommentsRequest = (owner_id, post_id) => ({\r\n    type: GET_COMMENTS_REQUEST,\r\n    owner_id,\r\n    post_id,\r\n})\r\n\r\nexport const getCommentsSuccess = (r) => ({\r\n    type: GET_COMMENTS_SUCCESS,\r\n    response: r,\r\n})\r\n\r\nexport const getCommentsFail = (errors) => ({\r\n    type: GET_COMMENTS_FAIL,\r\n    errors,\r\n})\r\n\r\nexport const sortComments = (result) => ({\r\n    type: 'SORT_COMMENTS',\r\n    result,\r\n})","import React from 'react'\r\n\r\n// export default class LoginButton extends React.Component {\r\n\r\n// \trender() {\r\n// \t\tconst { onLogin } = this.props\r\n\r\n// \t\treturn (\r\n// \t\t\t<button onClick={onLogin}>Login</button>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\nconst LoginButton = ({ onLogin }) => (\r\n\t<button onClick={onLogin} className='login-button'>{localStorage.isLoggedIn === \"true\" ? 'Log out' : 'Log in'}</button>\r\n\t\r\n)\r\n\r\nexport default LoginButton","import React from 'react'\r\nimport './ProfileCard.sass'\r\n\r\nconst ProfileCard = ({ state }) => (\r\n    <div className='profile-card'>\r\n        <p>{state.first_name}</p>\r\n        <a href={`https://vk.com/id${localStorage.id}`}>\r\n            <img src={state.photo} alt='Profile'/>\r\n        </a>\r\n    </div>\r\n)\r\n\r\nexport default ProfileCard","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Communities.sass'\r\n\r\nclass Communities extends React.Component {\r\n    renderCommunities() {\r\n        const { wallGetRequest, state } = this.props\r\n        const communities = state.communities\r\n\r\n        return communities.map(item => (\r\n            <div key={item.id} className='group-card' style={{ opacity: state.isFetching ? 0.5 : 1 }}>\r\n                <div onClick={() => wallGetRequest(item)}>\r\n                    <Link to={`/${item.screen_name}/wall` }>\r\n                        <img src={item.photo_100} alt={`${item.name}`}/>\r\n                    </Link>\r\n                </div>\r\n                <div className='info'>\r\n                    <Link to={`/${item.screen_name}/wall`} className='group-name'>\r\n                        <div>{item.name}</div>\r\n                    </Link>\r\n                    <div>{item.activity}</div>\r\n                    <div>{item.members_count} подписчик</div>\r\n                </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        const { state } = this.props\r\n        \r\n        return (\r\n            <>\r\n                {state.communities[0] &&\r\n                    this.renderCommunities()\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Communities","import React, { Component } from 'react'\r\n//import ReactDOM from \"react-dom\"\r\nimport './Post.sass'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Post extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tstyle: {\r\n\t\t\t\tgridRowEnd: \"span 2\"\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.wallPost = React.createRef()\r\n\t\tthis.postRef = React.createRef()\r\n\t}\r\n\t\r\n\tresizeComponent() {\r\n\t\tlet postHeight = this.wallPost.current.getBoundingClientRect().height\r\n\t\tlet k = Math.ceil((postHeight + 5) / 5 ) + 1\r\n\t\t\r\n\t\tthis.setState({style: { gridRowEnd: `span ${k}`}})\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.resizeComponent()\r\n\t}\r\n\r\n\r\n\ttakePhoto(item, size) {\r\n\t\tif (!item.attachments) return\r\n\t\t\t\r\n\t\t\tlet photos = []\r\n\t\r\n\t\t\tfor (let a of item.attachments) {\r\n\t\t\t\tif (a.type === 'photo') photos.push(a.photo)\r\n\t\t\t}\r\n\t\r\n\t\t\tif (!photos.length) return\r\n\t\r\n\t\t\tconst filteredPhotos =  photos.map(i => {\r\n\t\t\t\tlet result = {}\r\n\t\r\n\t\t\t\tif (i.sizes[size]) {\r\n\t\t\t\t\tresult = i.sizes[size]\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j=size; j>0; j--) {\r\n\t\t\t\t\t\tif (i.sizes[j]) return i.sizes[j]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn result\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\treturn(\r\n\t\t\t\t<img src={filteredPhotos[0].url} alt='' className='attached-img'/>\r\n\t\t\t)\r\n\t}\r\n\r\n\ttakeDate(ms) {\r\n\t\treturn new Date(ms).toLocaleString()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { item, getCommentsRequest } = this.props\r\n\t\treturn (\r\n\t\t\t\t<Link \r\n\t\t\t\t\tto={`comments`} \r\n\t\t\t\t\tkey={item.id + \"link\"} \r\n\t\t\t\t\tstyle={this.state.style} \r\n\t\t\t\t\tclassName={`item`}\r\n\t\t\t\t\tref={this.postRef}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tref={this.wallPost} \r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (item.comments.count) {\r\n\t\t\t\t\t\t\t\tsessionStorage.owner_id = item.owner_id\r\n\t\t\t\t\t\t\t\tsessionStorage.item_id = item.id\r\n\t\t\t\t\t\t\t\tgetCommentsRequest(sessionStorage.owner_id, sessionStorage.item_id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}} \r\n\t\t\t\t\t\tclassName={`wall-post ${item.id}`} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className='post-date'>{this.takeDate(item.date*1000)}</div>\r\n\t\t\t\t\t\t<div className='post-text'>{item.text}</div>\r\n\t\t\t\t\t\t<div className='post-img-div' onLoad={()=>this.resizeComponent()}>\r\n\t\t\t\t\t\t\t{this.takePhoto(item, 4)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='post-info'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='like-svg'/>\r\n\t\t\t\t\t\t\t\t<div>{item.likes.count}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{item.comments && \r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='comments-svg'/>\r\n\t\t\t\t\t\t\t\t<div>{item.comments.count}</div>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='reposts-svg'/>\r\n\t\t\t\t\t\t\t\t<div>{item.reposts.count}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{item.views &&\r\n\t\t\t\t\t\t\t<div className='views'>\r\n\t\t\t\t\t\t\t\t<div className='view-svg'/>\r\n\t\t\t\t\t\t\t\t<div>{item.views.count}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport './Wall.sass'\r\nimport Post from './Post'\r\n\r\nclass Wall extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\t//console.log(this.content)\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst { state, props, wallGetRequest } = this.props\r\n\r\n\t\tconst takePickedGroup = (screen_name) => {\r\n\t\t\tconst groups = state.communities\r\n\r\n\t\t\tfor (let i=0; groups.length > i; i++) {\r\n\t\t\t\tif (groups[i].screen_name === screen_name) return groups[i] \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!state.pickedGroup.screen_name && state.communities[0] && !state.isFetching) {\r\n\t\t\tconst pickedGroup = takePickedGroup(props.match.params.id)\r\n\t\t\t\r\n\t\t\twallGetRequest(pickedGroup)\r\n\t\t}\r\n\t}\r\n\r\n\trenderPosts() {\r\n\t\tconst { state, getCommentsRequest } = this.props\r\n\r\n\t\t// const takePhoto = (item, size) => {\r\n\t\t// \tif (!item.attachments) return\r\n\t\t\t\r\n\t\t// \tlet photos = []\r\n\t\r\n\t\t// \tfor (let a of item.attachments) {\r\n\t\t// \t\tif (a.type === 'photo') photos.push(a.photo)\r\n\t\t// \t}\r\n\t\r\n\t\t// \tif (!photos.length) return\r\n\t\r\n\t\t// \tconst filteredPhotos =  photos.map(i => {\r\n\t\t// \t\tlet result = {}\r\n\t\r\n\t\t// \t\tif (i.sizes[size]) {\r\n\t\t// \t\t\tresult = i.sizes[size]\t\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tfor (let j=size; j>0; j--) {\r\n\t\t// \t\t\t\tif (i.sizes[j]) return i.sizes[j]\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t\t\t\r\n\t\t// \t\treturn result\r\n\t\t// \t})\r\n\t\t\t\r\n\t\t// \treturn(\r\n\t\t// \t\t<img src={filteredPhotos[0].url} alt='' className='attached-img'/>\r\n\t\t// \t)\r\n\t\t// }\r\n\r\n\t\t// const takeDate = (ms) => {\r\n\t\t// \treturn new Date(ms).toLocaleString()\r\n\t\t// }\r\n\r\n\t\tif (!state.isFatching && state.posts[0]) {\r\n\r\n\r\n\t\t\treturn state.posts.map(item => (\r\n\t\t\t\t<Post item={item} getCommentsRequest={getCommentsRequest} key={item.id}/>\r\n\t\t\t))\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { state } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className='wall-grid' style={{ opacity: state.isFetching ? 0.5 : 1 }}>{this.renderPosts()}</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Wall","import React from 'react'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport './Back.sass'\r\n\r\nclass Back extends React.Component {\r\n    render\r\n\r\n    render() {\r\n        const { state, match } = this.props\r\n        return(\r\n            <div className='back'>\r\n                <Route path='/:id/wall'\r\n                    render = {\r\n                        () => {\r\n                            return(\r\n                                <>\r\n                                <Link to={'/'}>\r\n                                    <div className='back-svg'/>\r\n                                </Link>\r\n                                <div className='back-img'>\r\n                                    {state.pickedGroup &&\r\n                                        <img src={state.pickedGroup.photo_50} alt=''/>\r\n                                    }\r\n                                </div>\r\n                                <div className='back-h1'>\r\n                                    {state.pickedGroup &&\r\n                                        <h1>{state.pickedGroup.name.slice(0, 26)}</h1>\r\n                                    }\r\n                                </div>\r\n                                </>\r\n                            )\r\n                        }\r\n                    }\r\n                />\r\n                <Route path='/:id/comments'\r\n                    render = {\r\n                        () => {\r\n                            return(\r\n                                <>\r\n                                <Link to={`/${match.params.id}/wall`}>\r\n                                    <div className='back-svg'/>\r\n                                </Link>\r\n                                <div className='back-img'>\r\n                                    {state.pickedGroup &&\r\n                                        <img src={state.pickedGroup.photo_50} alt=''/>\r\n                                    }\r\n                                </div>\r\n                                <div className='back-h1'>\r\n                                    {state.pickedGroup &&\r\n                                        <h1>Комментарии</h1>\r\n                                    }\r\n                                </div>\r\n                                </>\r\n                            )\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Back","import React from 'react'\r\n\r\nclass CommentCard extends React.Component  {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { hiresImg : ''}\r\n\t}\r\n\t\r\n\ttakeProfile = (id) => {\r\n\t\tconst { state } = this.props\r\n\t\tconst profiles = state.comments.profiles\r\n\t\tconst groups = state.comments.groups\r\n\r\n\t\tif (`${id}`.includes('-')) {\r\n\t\t\tfor (let i=0; i < groups.length; i++) {\r\n\t\t\t\tif (`-${groups[i].id}` === `${id}`) return groups[i]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i=0; i < profiles.length; i++) {\r\n\t\t\t\tif (profiles[i].id === id) return profiles[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\ttakePhoto = (item, size) => {\r\n\t\tif (!item.attachments) return\r\n\t\t\r\n\t\tlet photos = []\r\n\r\n\t\tfor (let a of item.attachments) {\r\n\t\t\tif (a.type === 'photo') photos.push(a.photo)\r\n\t\t}\r\n\r\n\t\tif (!photos.length) return\r\n\r\n\t\tconst filteredPhotos =  photos.map(i => {\r\n\t\t\tlet result = {}\r\n\r\n\t\t\tif (i.sizes[size]) {\r\n\t\t\t\tresult = i.sizes[size]\t\r\n\t\t\t} else {\r\n\t\t\t\tfor (let j=size; j>0; j--) {\r\n\t\t\t\t\tif (i.sizes[j]) return i.sizes[j]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn result\r\n\t\t})\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<img src={filteredPhotos[0].url} alt='' className='attached-img'/>\r\n\t\t)\r\n\t}\r\n\r\n\thandleText = (text) => {\r\n\t\tif (!text || text.slice(0, 1) !== '[') return text\r\n\r\n\t\tconst start = text.indexOf('[')\r\n\t\tconst stop = text.indexOf(']')\r\n\t\tconst nameStart = text.indexOf('|')\r\n\r\n\t\tconst name = text.slice(nameStart + 1, stop)\r\n\t\tconst id = text.slice(start + 1, nameStart)\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<a href={`https://vk.com/${id}`}>{name}</a>\r\n\t\t\t\t<>{text.slice(stop + 1)}</>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\t\tconst { item } = this.props\r\n\r\n\t\t\tthis.handleText(item.text)\r\n\t\t\r\n\t\t\tif (item.deleted) return <div className='delited-comment'>Comment delited</div>\r\n\t\t\tconst profile = this.takeProfile(item.from_id)\r\n\t\t\r\n\t\t\treturn(\r\n\t\t\t\t<>\r\n\t\t\t\t{!profile.type ? (\r\n\t\t\t\t\t<div className='comment-card'>\r\n\t\t\t\t\t\t<a href={profile && 'https://vk.com/id'+profile.id}>\r\n\t\t\t\t\t\t\t<img src={profile && profile.photo_50} alt=''/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<div className='comment'>\r\n\t\t\t\t\t\t\t<a href={profile && 'https://vk.com/id'+profile.id}>{profile && (profile.first_name + ' ' + profile.last_name)}</a>\r\n\t\t\t\t\t\t\t<div className='handled-text'>{this.handleText(item.text)}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{this.takePhoto(item, 2)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='comment-like'>\r\n\t\t\t\t\t\t\t\t<div className='like'/>\r\n\t\t\t\t\t\t\t\t<div>{item.likes && item.likes.count}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>                                                           \r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='comment-card'>\r\n\t\t\t\t\t\t<a href={profile && 'https://vk.com/club'+profile.id}>\r\n\t\t\t\t\t\t\t<img src={profile && profile.photo_50} alt=''/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<div className='comment'>\r\n\t\t\t\t\t\t\t<a href={profile && 'https://vk.com/club'+profile.id}>{profile && (profile.name)}</a>\r\n\t\t\t\t\t\t\t<div className='handled-text'>{this.handleText(item.text)}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{this.takePhoto(item, 2)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='comment-like'>\r\n\t\t\t\t\t\t\t\t<div className='like'/>\r\n\t\t\t\t\t\t\t\t<div>{item.likes && item.likes.count}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>                                                           \r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default CommentCard","import React from 'react'\r\nimport './Comments.sass'\r\nimport CommentCard from './CommentCard'\r\n\r\nclass Comments extends React.Component {\r\n\tcomponentDidUpdate() {\r\n\t\tconst { state, getCommentsRequest, props, wallGetRequest } = this.props\r\n\r\n\t\tconst takePickedGroup = (screen_name) => {\r\n\t\t\tconst groups = state.communities\r\n\r\n\t\t\tfor (let i=0; groups.length > i; i++) {\r\n\t\t\t\tif (groups[i].screen_name === screen_name) return groups[i] \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!state.pickedGroup.screen_name && state.communities[0] && !state.isFetching) {\r\n\t\t\tconst pickedGroup = takePickedGroup(props.match.params.id)\r\n\t\t\t\r\n\t\t\twallGetRequest(pickedGroup)\r\n\t\t}\r\n\t\t\r\n\t\tif (!state.comments.count && !state.isFetching) {\r\n\t\t\tgetCommentsRequest(sessionStorage.owner_id, sessionStorage.item_id)\r\n\t\t}\r\n\t}\r\n\r\n\trenderComments() {\r\n\t\tconst { state } = this.props\r\n\t\t\r\n\t\treturn state.comments.items.map( item => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={item.id} className='wrapper'>\r\n\t\t\t\t\t<CommentCard item={item} state={state}/>\r\n\r\n\t\t\t\t\t<div className='thread'>\r\n\t\t\t\t\t\t{(item.thread.count !== 0) && item.thread.items.map(\r\n\t\t\t\t\t\t\titem => (\r\n\t\t\t\t\t\t\t\t<CommentCard key={item.id} item={item} state={state}/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { state } = this.props\r\n\r\n\t\treturn(\r\n\t\t\t<div className='comments-grid' style={{ opacity: state.isFetching ? 0.2 : 1 }}>\r\n\t\t\t\t{(state.comments.items && state.comments.profiles )&&\r\n\t\t\t\t\tthis.renderComments()}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Comments","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport './Sort.sass'\r\n\r\nclass Sort extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {isSorted: false, originalSort: {}}\r\n\t}\r\n\r\n\tsortCommentsFunction(comments) {\r\n\t\tconst { sortComments } = this.props\r\n\r\n\t\tif (!this.state.isSorted) {\r\n\t\t\tthis.setState({ originalSort: comments })\r\n\r\n\t\t\tconst filteredItems = comments.items.filter(isDeleted => !isDeleted.deleted)\r\n\t\t\tconst filteredComments = { ...comments, items: filteredItems}\r\n\t\r\n\t\t\tconst resultItems = filteredComments.items.sort((a, b) => b.likes.count - a.likes.count)\r\n\t\t\tconst result = { ...filteredComments, items: resultItems}\r\n\r\n\t\t\tsortComments(result)\r\n\t\t} else {\r\n\t\t\tsortComments(this.state.originalSort)\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({isSorted: !this.state.isSorted})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { state } = this.props\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Route path='/:id/comments' render={() =>(\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{state.comments.length !== 0 &&\r\n\t\t\t\t\t\t\t<button className='sort-button' onClick={\r\n\t\t\t\t\t\t\t\t() => this.sortCommentsFunction(state.comments)}\r\n\t\t\t\t\t\t\t>{(this.state.isSorted) ? 'Сначала старые' : 'Лучшие комментарии'}</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</>\r\n\t\t\t\t) \r\n\t\t\t\t}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Sort","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport { \r\n\tloginRequest, \r\n} from '../actions/LoginActions'\r\nimport { communitiesGetRequest, wallGetRequest, getCommentsRequest, sortComments } from '../actions/communitiesActions'\r\nimport LoginButton from '../components/LoginButton'\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport Communities from '../components/Communities'\r\nimport Wall from '../components/Wall'\r\nimport Back from '../components/Back'\r\nimport Comments from '../components/Comments'\r\nimport Sort from '../components/Sort'\r\n\r\n\r\nclass App extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tconst { communitiesGetRequest, state } = this.props\r\n\t\r\n\t\tif (localStorage.isLoggedIn === 'true' && !state.communities.length) {\r\n\t\t\tcommunitiesGetRequest()\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\tconst { \r\n\t\t\tstate,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className='app-grid'>\r\n\t\t\t\t<div className='logged-user'>\r\n\t\t\t\t\t{localStorage.isLoggedIn === 'true' &&\r\n\t\t\t\t\t\t<ProfileCard \r\n\t\t\t\t\t\t\tstate={localStorage} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<LoginButton \r\n\t\t\t\t\t\tstate={state} \r\n\t\t\t\t\t\tonLogin={rest.onLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Route exact path='/' render={\r\n\t\t\t\t\t() => <h1 className='groups-h1'>Группы</h1>\r\n\t\t\t\t} />\r\n\t\t\t\t<div className='groups-grid'>\r\n\t\t\t\t\t{localStorage.isLoggedIn === 'true' &&\r\n\t\t\t\t\t\t<Route exact path='/' render={\r\n\t\t\t\t\t\t\t() => <Communities\r\n\t\t\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\t\t\twallGetRequest={rest.wallGetRequest}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Route path='/:id/' render={\r\n\t\t\t\t\t(props) => (\r\n\t\t\t\t\t\t<div className='top-pannel'>\r\n\t\t\t\t\t\t\t<Back \r\n\t\t\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\t\t\tmatch={props.match}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Sort \r\n\t\t\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\t\t\tsortComments={rest.sortComments}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t} />\r\n\t\t\t\t<Route path='/:id/wall' render={\r\n\t\t\t\t\t(props) => <Wall \r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\twallGetRequest={rest.wallGetRequest}\r\n\t\t\t\t\t\tgetCommentsRequest={rest.getCommentsRequest}\r\n\t\t\t\t\t\tprops={props}\r\n\t\t\t\t\t/>\r\n\t\t\t\t} />\r\n\t\t\t\t<Route path='/:id/comments' render={\r\n\t\t\t\t\t(props) => <Comments \r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\twallGetRequest={rest.wallGetRequest}\r\n\t\t\t\t\t\tgetCommentsRequest={rest.getCommentsRequest}\r\n\t\t\t\t\t\tprops={props}\r\n\t\t\t\t\t/>\r\n\t\t\t\t} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tstate,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tonLogin: () => dispatch(loginRequest),\r\n\r\n\tcommunitiesGetRequest: () => dispatch(communitiesGetRequest),\r\n\r\n\twallGetRequest: (name) => dispatch(wallGetRequest(name)),\r\n\r\n\tgetCommentsRequest: (owner_id, post_id) => dispatch(getCommentsRequest(owner_id, post_id)),\r\n\r\n\tsortComments: (result) => dispatch(sortComments(result)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export const apiCall = ({ \r\n\tmethod,\r\n\tparams,\r\n}) => {\r\n\tconst promise = () => new Promise((resolve, reject) => {\r\n\t\t// eslint-disable-next-line no-undef\r\n\t\tVK.Api.call(method, { v:'5.95', ...params}, r => resolve(r) )\r\n\t})\r\n\r\n\treturn promise().then(\r\n\t\tresponse => response\r\n\t)\r\n}\r\n\r\n// export const get = async ({\r\n// \turl,\r\n// \toptions = {},\r\n// \theaders = {},\r\n//   }) => {\r\n// \tconst response = await fetch(url, {\r\n// \t  method: \"GET\",\r\n// \t  mode: \"cors\",\r\n// \t  headers: {\r\n// \t\t...headers,\r\n// \t  },\r\n// \t  ...options,\r\n// \t});\r\n\t\r\n// \treturn await response.json();\r\n// }\r\n\r\n// export const post = async ({\r\n//   url,\r\n//   body = {},\r\n//   options = {},\r\n//   headers = {},\r\n// }) => {\r\n//   const response = await fetch(url, {\r\n//     method: \"POST\",\r\n//     mode: \"cors\",\r\n//     body: JSON.stringify(body),\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       ...headers,\r\n//     },\r\n//     ...options,\r\n//   });\r\n\r\n//   return await response.json();\r\n// }\r\n\r\n","import { put, takeLatest, all } from 'redux-saga/effects'\r\nimport { \r\n\tloginRequest,\r\n\tloginSuccess, \r\n\tloginFail, \r\n\tuserGetRequest,\r\n\tuserGetSuccess,\r\n\tuserGetFail,\r\n} from '../actions/LoginActions'\r\n\r\nimport { communitiesGetRequest } from '../actions/communitiesActions'\r\n\r\nimport { apiCall } from '../api'\r\n\r\nexport function* onLogin() {\r\n\tconst login = () => {\r\n\t\tconst loginRequest = () => (\r\n\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\tVK.Auth.login((response) => {\r\n\t\t\t\t\tif (response.session) {\r\n\t\t\t\t\t\tresolve(response)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject(response)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 270336)\r\n\t\t\t})\r\n\t\t)\r\n\r\n\t\treturn loginRequest().then(\r\n\t\t\tresponse => response\r\n\t\t)\r\n\t}\r\n\r\n\t// const logout = () => {\r\n\t// \tconst logoutRequest = () => (\r\n\t// \t\tnew Promise((resolve, reject) => {\r\n\t// \t\t\t// eslint-disable-next-line no-undef\r\n\t// \t\t\tVK.Auth.logout((response) => {\r\n\t// \t\t\t\tif (response.session) {\r\n\t// \t\t\t\t\tresolve(response)\r\n\t// \t\t\t\t} else {\r\n\t// \t\t\t\t\treject(response)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t)\r\n\r\n\t// \treturn logoutRequest().then(\r\n\t// \t\tresponse => response\r\n\t// \t)\r\n\t// }\r\n\r\n\ttry {\r\n\t\tlet r = ''\r\n\t\tif (localStorage.isLoggedIn === 'false' || !localStorage.isLoggedIn) {\r\n\t\t\tr = yield login()\r\n\t\t} else {\r\n\t\t\t// yield logout()\r\n\t\t\tlocalStorage.isLoggedIn = 'false'\r\n\t\t}\r\n\r\n\t\tif (r.session) {\r\n\t\t\tlocalStorage.isLoggedIn = 'true'\r\n\t\t\tlocalStorage.id = r.session.user.id\r\n\t\t\t\r\n\t\t\tyield put(loginSuccess)\r\n\t\t} else {\r\n\t\t\tthrow new Error(r.error)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tyield put(loginFail)\r\n\t}\r\n}\r\n\r\nexport function* watchOnLogin() {\r\n\tyield takeLatest(loginRequest.type, onLogin)\r\n}\r\n\r\n\r\nexport function* usersGet() {\r\n\ttry {\r\n\t\tyield put(userGetRequest)\r\n\r\n\t\tconst r = yield apiCall({ \r\n\t\t\tmethod: 'users.get', \r\n\t\t\tparams: {\r\n\t\t\t\tuser_ids: localStorage.id, \r\n\t\t\t\tfields: 'photo_200', \r\n\t\t\t\tv:\"5.95\"}\r\n\t\t\t})\r\n\t\t\r\n\t\tif (r.response) {\r\n\t\t\tlocalStorage.photo = r.response[0].photo_200\r\n\t\t\tlocalStorage.first_name = r.response[0].first_name\r\n\t\t\tlocalStorage.last_name = r.response[0].last_name\r\n\t\t\tyield put(userGetSuccess)\r\n\t\t\tyield put(communitiesGetRequest)\r\n\t\t} else {\r\n\t\t\tthrow new Error(r.error)\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tyield put(userGetFail(error))\r\n\t}\r\n}\r\n\r\nexport function* watchUsersGet() {\r\n\tyield takeLatest(loginSuccess.type, usersGet)\r\n}\r\n\r\n\r\nexport default function* loginSaga() {\r\n\tyield all([\r\n\t\twatchOnLogin(),\r\n\t\twatchUsersGet(),\r\n\t])\r\n}","import { put, takeLatest, all } from 'redux-saga/effects'\r\n\r\nimport { \r\n\tcommunitiesGetRequest, \r\n\tcommunitiesGetSuccess, \r\n\tcommunitiesGetFail, \r\n\twallGetRequest, \r\n\twallGetSuccess, \r\n    wallGetFail,\r\n    getCommentsRequest,\r\n    getCommentsSuccess,\r\n    getCommentsFail,\r\n} from '../actions/communitiesActions'\r\nimport { apiCall } from '../api'\r\n\r\nfunction* renderCommunities() {\r\n    try {\r\n        const r = yield apiCall({ \r\n            method: 'groups.get', \r\n            params: {extended: 1, count: 999, fields: 'activity,members_count'} \r\n        })\r\n        \r\n        if (!r.error) {\r\n            yield put(communitiesGetSuccess(r.response))\r\n        } else {\r\n            throw new Error(r.error.error_msg)\r\n        }\r\n    } catch (error) {\r\n        yield put(communitiesGetFail(error))\r\n        yield localStorage.isLoggedIn = 'false'\r\n    }\r\n}\r\n\r\nfunction* watchRenderCommunities() {\r\n\tyield takeLatest(communitiesGetRequest.type, renderCommunities)\r\n}\r\n\r\nfunction* onWallGetRequest(action) {\r\n    try {\r\n        const r = yield apiCall({ \r\n            method: 'wall.get', \r\n            params: {domain: action.pickedGroup.screen_name, count: 30, extended: 1} \r\n        })\r\n        \r\n        if (!r.error) {\r\n            yield put(wallGetSuccess(r.response))\r\n        } else {\r\n            throw new Error(r.error.error_msg)\r\n        }\r\n    } catch (error) {\r\n        yield put(wallGetFail(error))\r\n    }\r\n}\r\n\r\nfunction* watchOnWallGetRequest() {\r\n    yield takeLatest(wallGetRequest().type, onWallGetRequest)\r\n}\r\n\r\nfunction* onGetCommentsRequest(action) {\r\n    try {\r\n        const r = yield apiCall({\r\n            method: 'wall.getComments',\r\n            params: {owner_id: action.owner_id, post_id: action.post_id, need_likes: 1, count: 100, thread_items_count: 10, extended: 1}\r\n        })\r\n\r\n        if (!r.error) {\r\n            yield put(getCommentsSuccess(r.response))\r\n        } else {\r\n            throw new Error(r.error.error_msg)\r\n        }\r\n    } catch (error) {\r\n        console.log('onGetCommentsRequest: ',error)\r\n        yield put(getCommentsFail(error))\r\n    }\r\n}  \r\n\r\nfunction* watchOnGetCommentsRequest() {\r\n    yield takeLatest(getCommentsRequest().type, onGetCommentsRequest)\r\n}\r\n\r\nexport default function* communitiesSaga() {\r\n    yield all([\r\n        watchRenderCommunities(), \r\n        watchOnWallGetRequest(),\r\n        watchOnGetCommentsRequest()\r\n    ])\r\n}","import { all } from 'redux-saga/effects'\r\n\r\nimport loginSaga from './saga/loginSaga'\r\nimport communitiesSaga from './saga/communitiesSaga'\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        loginSaga(),\r\n        communitiesSaga(),\r\n    ])\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { createLogger } from 'redux-logger'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport App from './containers/App'\r\nimport rootReducer from './reducers'\r\nimport rootSaga from './rootSaga'\r\nimport './styles/index.sass'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst loggerMiddleware = createLogger()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware, loggerMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n  )","import { \r\n\tLOGIN_REQUEST, \r\n\tLOGIN_SUCCESS, \r\n\tLOGIN_FAIL, \r\n\tUSER_GET_REQUEST, \r\n\tUSER_GET_SUCCESS, \r\n\tUSER_GET_FAIL,\r\n } from \"../actions/LoginActions\";\r\n\r\nimport {\r\n\tCOMMUNITIES_GET_REQUEST,\r\n\tCOMMUNITIES_GET_SUCCESS,\r\n\tCOMMUNITIES_GET_FAIL,\r\n\tWALL_GET_REQUEST,\r\n\tWALL_GET_SUCCESS,\r\n\tWALL_GET_FAIL,\r\n\tGET_COMMENTS_REQUEST,\r\n\tGET_COMMENTS_SUCCESS,\r\n\tGET_COMMENTS_FAIL,\r\n\r\n} from '../actions/communitiesActions'\r\n\r\nexport default function rootReducer(state = {\r\n\tisFetching: false,\r\n\terrors: [],\r\n\tcommunities: [],\r\n\tpickedGroup: '',\r\n\tposts: [],\r\n\tcomments: [],\r\n}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t}\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t}\r\n\t\tcase LOGIN_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t}\r\n\t\tcase USER_GET_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t}\r\n\t\tcase USER_GET_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t}\r\n\t\tcase USER_GET_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\terrors: state.errors.concat(...state.errors, action.error)\r\n\t\t\t}\r\n\t\tcase COMMUNITIES_GET_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t}\r\n\t\tcase COMMUNITIES_GET_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\tcommunities: action.response.items\r\n\t\t\t}\r\n\t\tcase COMMUNITIES_GET_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\terrors: state.errors.concat(...state.errors, action.error)\r\n\t\t\t}\r\n\t\tcase WALL_GET_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t\tpickedGroup: action.pickedGroup,\r\n\t\t\t\tcomments: []\r\n\t\t\t}\r\n\t\tcase WALL_GET_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\tposts: action.response.items\r\n\t\t\t}\r\n\t\tcase WALL_GET_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\terrors: state.errors.concat(...state.errors, action.error)\r\n\t\t\t}\r\n\t\tcase GET_COMMENTS_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t}\r\n\t\tcase GET_COMMENTS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\tcomments: action.response\r\n\t\t\t}\r\n\t\tcase GET_COMMENTS_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\terrors: state.errors.concat(...state.errors, action.error)\r\n\t\t\t}\r\n\t\tcase 'SORT_COMMENTS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: action.result\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n"],"sourceRoot":""}